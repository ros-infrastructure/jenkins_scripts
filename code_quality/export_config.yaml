metrics:
    STCYC:
        name: STCYC
        metric_type: function
        brief: Cyclomatic complexity
        description: 'Cyclomatic complexity is calculated as the number of decisions plus 1. High cyclomatic complexity indicates inadequate modularization or too much logic in one function. Software metric research has indicated that functions with a cyclomatic complexity greater than 10 tend to have problems related to their complexity.'
        histogram_num_bins: 10
        histogram_minval: 1
        histogram_maxval: 20
        histogram_recommendedMin: 1
        histogram_recommendedMax: 15
        histogram_title_xaxis: Cyclomatic complexity (STCYC)
        histogram_title_yaxis: Number of functions
        data_type: int 
    STPTH:    
        name: STPTH
        metric_type: function
        brief: Estimated static path count
        description: 'This gives an upper bound on the number of possible paths in the control flow of the function. It is the number of non-cyclic execution paths in a function.'
        histogram_num_bins: 10
        histogram_minval: 1
        histogram_maxval: 300
        histogram_recommendedMin: 1
        histogram_recommendedMax: 250
        histogram_title_xaxis: Estimated static path count (STPTH)
        histogram_title_yaxis: Number of functions
        data_type: int
    STSUB:    
        name: STSUB
        metric_type: function
        brief: Number of Function Calls
        description: 'The number of function calls within a function. Functions with a large number of function calls are more difficult to understand because their functionality is spread across several components. Note that the calculation of STSUB is based on the number of function calls and not the number of distinct functions that are called.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 20
        histogram_recommendedMin: 1
        histogram_recommendedMax: 10
        histogram_title_xaxis: Number of function calls (STSUB)
        histogram_title_yaxis: Number of functions
        data_type: int      
    STCDN:    
        name: STCDN
        metric_type: file   
        brief: Comment to code ratio
        description: 'This metric is defined to be the number of visible characters in comments divided by the number of visible characters outside comments. Comment delimiters are ignored. Whitespace characters in strings are treated as visible characters. A large metric value may indicate that there are too many comments - an attribute that can make a module difficult to read. A small value may indicate that there are not enough.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 2.0
        histogram_recommendedMin: 0.2
        histogram_recommendedMax: 2.0
        histogram_title_xaxis: Comment to code ratio (STCDN)
        histogram_title_yaxis: Number of files
        data_type: float     
    STCBO:    
        name: STCBO
        metric_type: class
        brief: Coupling between objects
        description: 'This is a count of the number of methods (member functions) or member objects of other classes accessed by a class. Only classes outside the inheritance hierarchy are considered, because you would expect interaction with base and derived classes. Coupling to classes outside the inheritance tree should be viewed with suspicion as it makes the class less 4 independent and less re-usable.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 10
        histogram_recommendedMin: 0
        histogram_recommendedMax: 5
        histogram_title_xaxis: Coupling between objects (STCBO)
        histogram_title_yaxis: Number of classes 
        data_type: int 
   STMTH:    
        name: STMTH
        metric_type: class
        brief: Number of methods available in class
        description: 'The number of methods declared within a class. This does not include methods declared in base classes. Classes with a large number of methods will be difficult to understand.'
        histogram_num_bins: 20
        histogram_minval: 0
        histogram_maxval: 50
        histogram_recommendedMin: 1
        histogram_recommendedMax: 20
        histogram_title_xaxis: Number of methods available in class (STMTH)
        histogram_title_yaxis: Number of classes
        data_type: int  
    STNOC:    
        name: STNOC
        metric_type: class
        brief: Number of immediate children
        description: 'This is the number of classes for which this class is an immediate base class. A high figure for
this metric indicates greater dependence on the functionality of this class, and more potential
knock-on effects from changes to it.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 20 
        histogram_recommendedMin: 0
        histogram_recommendedMax: 10
        histogram_title_xaxis: Number of immediate children (STNOC)
        histogram_title_yaxis: Number of classes
        data_type: int 
    STXLN:    
        name: STXLN
        metric_type: function
        brief: Number of executable lines
        description: 'The count of lines of a function body (starting at the first non-comment token that follows the exception specification, through to the last brace) that contain tokens, where lines that only contain any of the following are not counted: {, }, comment and all tokens of declarations.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 100 
        histogram_recommendedMin: 1
        histogram_recommendedMax: 70
        histogram_title_xaxis: Number of executable lines (STXLN)
        histogram_title_yaxis: Number of functions
        data_type: int 
    STMIF:    
        name: STMIF
        metric_type: function
        brief: Maximum nesting of control structures
        description: 'This metric is a measure of the maximum control flow nesting in your source code. You can reduce the value of this metric by turning your nesting into separate functions. This will improve the readability of the code by reducing both the nesting and the average cyclomatic complexity per function.'
        histogram_num_bins: 10
        histogram_minval: 1
        histogram_maxval: 10 
        histogram_recommendedMin: 0
        histogram_recommendedMax: 5
        histogram_title_xaxis: Maximum nesting of control structures (STMIF)
        histogram_title_yaxis: Number of functions
        data_type: int 
    STWMC:    
        name: STWMC
        metric_type: class
        brief: Weighted methods per class
        description: ''
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 200 
        histogram_recommendedMin: 1
        histogram_recommendedMax: 100
        histogram_title_xaxis: Weighted methods per class (STWMC)
        histogram_title_yaxis: Number of functions
        data_type: int 
    STDIT:    
        name: STDIT
        metric_type: class
        brief: Deepest level of inheritance
        description: 'This represents the number of derivations from the furthest base class down to this class. A high figure may indicate that the class depends on accumulated functionality, which makes understanding the class potentially difficult. This is one of the metrics defined by Chidamber & Kemerer.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 10 
        histogram_recommendedMin: 1
        histogram_recommendedMax: 5
        histogram_title_xaxis: Deepest level of inheritance (STDIT)
        histogram_title_yaxis: Number of functions
        data_type: int 
